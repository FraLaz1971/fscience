C *************************************************************************
      SUBROUTINE COPYHDU

C  COPY THE 1ST AND 3RD HDUS FROM THE INPUT FILE TO A NEW FITS FILE

      INTEGER STATUS,INUNIT,OUTUNIT,READWRITE,BLOCKSIZE,MOREKEYS,HDUTYPE
      CHARACTER INFILENAME*40,OUTFILENAME*40

C  THE STATUS PARAMETER MUST ALWAYS BE INITIALIZED.
      STATUS=0

C     NAME OF THE FITS FILES:
      INFILENAME='ATESTFILEZ.FITS'
      OUTFILENAME='BTESTFILEZ.FITS'

C  DELETE THE FILE IF IT ALREADY EXISTS, SO WE CAN THEN RECREATE IT
C  THE DELETEFILE SUBROUTINE IS LISTED AT THE END OF THIS FILE.
      CALL DELETEFILE(OUTFILENAME,STATUS)

C  GET  UNUSED LOGICAL UNIT NUMBERS TO USE TO OPEN THE FITS FILES.
      CALL FTGIOU(INUNIT,STATUS)
      CALL FTGIOU(OUTUNIT,STATUS)

C  OPEN THE INPUT FITS FILE, WITH READONLY ACCESS
      READWRITE=0
      CALL FTOPEN(INUNIT,INFILENAME,READWRITE,BLOCKSIZE,STATUS)

C  CREATE THE NEW EMPTY FITS FILE (VALUE OF BLOCKSIZE IS IGNORED)
      BLOCKSIZE=1
      CALL FTINIT(OUTUNIT,OUTFILENAME,BLOCKSIZE,STATUS)

C  FTCOPY COPIES THE CURRENT HDU FROM THE INPUT FITS FILE TO THE OUTPUT
C  FILE.  THE MOREKEY PARAMETER ALLOWS ONE TO RESERVE SPACE FOR ADDITIONAL
C  HEADER KEYWORDS WHEN THE HDU IS CREATED.   FITSIO WILL AUTOMATICALLY
C  INSERT MORE HEADER SPACE IF REQUIRED, SO PROGRAMMERS DO NOT HAVE TO
C  RESERVE SPACE AHEAD OF TIME, ALTHOUGH IT IS MORE EFFICIENT TO DO SO IF
C  IT IS KNOWN THAT MORE KEYWORDS WILL BE APPENDED TO THE HEADER.
      MOREKEYS=0
      CALL FTCOPY(INUNIT,OUTUNIT,MOREKEYS,STATUS)

C  APPEND/CREATE A NEW EMPTY EXTENSION ON THE END OF THE OUTPUT FILE
      CALL FTCRHD(OUTUNIT,STATUS)

C  SKIP TO THE 3RD EXTENSION IN THE INPUT FILE WHICH IN THIS CASE
C  IS THE BINARY TABLE CREATED BY THE PREVIOUS WRITEBINARY ROUTINE.
      CALL FTMAHD(INUNIT,3,HDUTYPE,STATUS)

C  FTCOPY NOW COPIES THE BINARY TABLE FROM THE INPUT FITS FILE
C  TO THE OUTPUT FILE.
      CALL FTCOPY(INUNIT,OUTUNIT,MOREKEYS,STATUS)  

C  THE FITS FILES MUST ALWAYS BE CLOSED BEFORE EXITING THE PROGRAM. 
C  ANY UNIT NUMBERS ALLOCATED WITH FTGIOU MUST BE FREED WITH FTFIOU.
C  GIVING -1 FOR THE VALUE OF THE FIRST ARGUMENT CAUSES ALL PREVIOUSLY
C  ALLOCATED UNIT NUMBERS TO BE RELEASED.

      CALL FTCLOS(INUNIT, STATUS)
      CALL FTCLOS(OUTUNIT, STATUS)
      CALL FTFIOU(-1, STATUS)

C  CHECK FOR ANY ERROR, AND IF SO PRINT OUT ERROR MESSAGES.
C  THE PRINTERROR SUBROUTINE IS LISTED NEAR THE END OF THIS FILE.
      IF (STATUS .GT. 0)CALL PRINTERROR(STATUS)
      END

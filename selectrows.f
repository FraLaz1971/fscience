C *************************************************************************
      SUBROUTINE SELECTROWS

C  THIS ROUTINE COPIES SELECTED ROWS FROM AN INPUT TABLE INTO A NEW OUTPUT
C  FITS TABLE.  IN THIS EXAMPLE ALL THE ROWS IN THE INPUT TABLE THAT HAVE
C  A VALUE OF THE DENSITY COLUMN LESS THAT 3.0 ARE COPIED TO THE OUTPUT
C  TABLE.  THIS PROGRAM ILLUSTRATES SEVERAL GENERALLY USEFUL TECHNIQUES,
C  INCLUDING:
C      HOW TO LOCATE THE END OF A FITS FILE
C      HOW TO CREATE A TABLE WHEN THE TOTAL NUMBER OF ROWS IN THE TABLE
C      IS NOT KNOWN UNTIL THE TABLE IS COMPLETED
C      HOW TO EFFICIENTLY COPY ENTIRE ROWS FROM ONE TABLE TO ANOTHER.

      INTEGER STATUS,INUNIT,OUTUNIT,READWRITE,BLOCKSIZE,HDUTYPE
      INTEGER NKEYS,NSPACE,NAXES(2),NFOUND,COLNUM,FROW,FELEM
      INTEGER NOUTROWS,IROW,TEMP(100),I
      REAL NULLVAL,DENSITY(6)
      CHARACTER INFILENAME*40,OUTFILENAME*40,RECORD*80
      LOGICAL EXACT,ANYNULLS

C  THE STATUS PARAMETER MUST ALWAYS BE INITIALIZED.
      STATUS=0

C     NAMES OF THE FITS FILES:
      INFILENAME='ATESTFILEZ.FITS'
      OUTFILENAME='BTESTFILEZ.FITS'

C  GET  UNUSED LOGICAL UNIT NUMBERS TO USE TO OPEN THE FITS FILES.
      CALL FTGIOU(INUNIT,STATUS)
      CALL FTGIOU(OUTUNIT,STATUS)

C  THE INPUT FITS FILE IS OPENED WITH READONLY ACCESS, AND THE OUTPUT
C  FITS FILE IS OPENED WITH WRITE ACCESS.
      READWRITE=0
      CALL FTOPEN(INUNIT,INFILENAME,READWRITE,BLOCKSIZE,STATUS)
      READWRITE=1
      CALL FTOPEN(OUTUNIT,OUTFILENAME,READWRITE,BLOCKSIZE,STATUS)

C  MOVE TO THE 3RD HDU IN THE INPUT FILE (A BINARY TABLE IN THIS CASE)
      CALL FTMAHD(INUNIT,3,HDUTYPE,STATUS)

C  THIS DO-LOOP ILLUSTRATES HOW TO MOVE TO THE LAST EXTENSION IN ANY FITS
C  FILE.  THE CALL TO FTMRHD MOVES ONE EXTENSION AT A TIME THROUGH THE
C  FITS FILE UNTIL AN `END-OF-FILE' STATUS VALUE (= 107) IS RETURNED.
      DO WHILE (STATUS .EQ. 0)
          CALL FTMRHD(OUTUNIT,1,HDUTYPE,STATUS)
      END DO

C  AFTER LOCATING THE END OF THE FITS FILE, IT IS NECESSARY TO RESET THE
C  STATUS VALUE TO ZERO AND ALSO CLEAR THE INTERNAL ERROR MESSAGE STACK
C  IN FITSIO.  THE PREVIOUS `END-OF-FILE' ERROR WILL HAVE PRODUCED
C  AN UNIMPORTANT MESSAGE ON THE ERROR STACK WHICH CAN BE CLEARED WITH
C  THE CALL TO THE FTCMSG ROUTINE (WHICH HAS NO ARGUMENTS).

      IF (STATUS .EQ. 107)THEN
          STATUS=0
          CALL FTCMSG
      END IF

C  CREATE A NEW EMPTY EXTENSION IN THE OUTPUT FILE.
      CALL FTCRHD(OUTUNIT,STATUS)

C  FIND THE NUMBER OF KEYWORDS IN THE INPUT TABLE HEADER.
      CALL FTGHSP(INUNIT,NKEYS,NSPACE,STATUS)

C  THIS DO-LOOP OF CALLS TO FTGREC AND FTPREC COPIES ALL THE KEYWORDS FROM
C  THE INPUT TO THE OUTPUT FITS FILE.  NOTICE THAT THE SPECIFIED NUMBER
C  OF ROWS IN THE OUTPUT TABLE, AS GIVEN BY THE NAXIS2 KEYWORD, WILL BE
C  INCORRECT.  THIS VALUE WILL BE MODIFIED LATER AFTER IT IS KNOWN HOW MANY
C  ROWS WILL BE IN THE TABLE, SO IT DOES NOT MATTER HOW MANY ROWS ARE SPECIFIED
C  INITIALLY.
      DO I=1,NKEYS
          CALL FTGREC(INUNIT,I,RECORD,STATUS)
          CALL FTPREC(OUTUNIT,RECORD,STATUS)
      END DO

C  FTGKNJ IS USED TO GET THE VALUE OF THE NAXIS1 AND NAXIS2 KEYWORDS,
C  WHICH DEFINE THE WIDTH OF THE TABLE IN BYTES, AND THE NUMBER OF
C  ROWS IN THE TABLE.
      CALL FTGKNJ(INUNIT,'NAXIS',1,2,NAXES,NFOUND,STATUS)

C  FTGCNO GETS THE COLUMN NUMBER OF THE `DENSITY' COLUMN; THE COLUMN
C  NUMBER IS NEEDED WHEN READING THE DATA IN THE COLUMN.  THE EXACT
C  PARAMETER DETERMINES WHETHER OR NOT THE MATCH TO THE COLUMN NAMES
C  WILL BE CASE SENSITIVE.
      EXACT=.FALSE.
      CALL FTGCNO(INUNIT,EXACT,'DENSITY',COLNUM,STATUS)

C  FTGCVE READS ALL 6 ROWS OF DATA IN THE `DENSITY' COLUMN.  THE NUMBER
C  OF ROWS IN THE TABLE IS GIVEN BY NAXES(2). ANY NULL VALUES IN THE
C  TABLE WILL BE RETURNED WITH THE CORRESPONDING VALUE SET TO -99
C  (= THE VALUE OF NULLVAL).  THE ANYNULLS PARAMETER WILL BE SET TO TRUE
C  IF ANY NULL VALUES WERE FOUND WHILE READING THE DATA VALUES IN THE TABLE.
      FROW=1
      FELEM=1
      NULLVAL=-99.
      CALL FTGCVE(INUNIT,COLNUM,FROW,FELEM,NAXES(2),NULLVAL,
     &            DENSITY,ANYNULLS,STATUS)

C  IF THE DENSITY IS LESS THAN 3.0, COPY THE ROW TO THE OUTPUT TABLE.
C  FTGTBB AND FTPTBB ARE LOW-LEVEL ROUTINES TO READ AND WRITE, RESPECTIVELY,
C  A SPECIFIED NUMBER OF BYTES IN THE TABLE, STARTING AT THE SPECIFIED
C  ROW NUMBER AND BEGINNING BYTE WITHIN THE ROW.  THESE ROUTINES DO
C  NOT DO ANY INTERPRETATION OF THE BYTES, AND SIMPLY PASS THEM TO OR
C  FROM THE FITS FILE WITHOUT ANY MODIFICATION.  THIS IS A FASTER
C  WAY OF TRANSFERRING LARGE CHUNKS OF DATA FROM ONE FITS FILE TO ANOTHER,
C  THAN READING AND THEN WRITING EACH COLUMN OF DATA INDIVIDUALLY.
C  IN THIS CASE AN ENTIRE ROW OF BYTES (THE ROW LENGTH IS SPECIFIED
C  BY THE NAXES(1) PARAMETER) IS TRANSFERRED.  THE DATATYPE OF THE 
C  BUFFER ARRAY (TEMP IN THIS CASE) IS IMMATERIAL SO LONG AS IT IS
C  DECLARED LARGE ENOUGH TO HOLD THE REQUIRED NUMBER OF BYTES.
      NOUTROWS=0
      DO IROW=1,NAXES(2)
          IF (DENSITY(IROW) .LT. 3.0)THEN
              NOUTROWS=NOUTROWS+1
              CALL FTGTBB(INUNIT,IROW,1,NAXES(1),TEMP,STATUS)
              CALL FTPTBB(OUTUNIT,NOUTROWS,1,NAXES(1),TEMP,STATUS)
          END IF
      END DO

C  UPDATE THE NAXIS2 KEYWORD WITH THE CORRECT NO. OF ROWS IN THE OUTPUT FILE.
C  AFTER ALL THE ROWS HAVE BEEN WRITTEN TO THE OUTPUT TABLE, THE
C  FTMKYJ ROUTINE IS USED TO OVERWRITE THE NAXIS2 KEYWORD VALUE WITH
C  THE CORRECT NUMBER OF ROWS.  SPECIFYING `\&' FOR THE COMMENT STRING
C  TELLS FITSIO TO KEEP THE CURRENT COMMENT STRING IN THE KEYWORD AND
C  ONLY MODIFY THE VALUE.  BECAUSE THE TOTAL NUMBER OF ROWS IN THE TABLE
C  WAS UNKNOWN WHEN THE TABLE WAS FIRST CREATED, ANY VALUE (INCLUDING 0)
C  COULD HAVE BEEN USED FOR THE INITIAL NAXIS2 KEYWORD VALUE.
      CALL FTMKYJ(OUTUNIT,'NAXIS2',NOUTROWS,'&',STATUS)

C  THE FITS FILES MUST ALWAYS BE CLOSED BEFORE EXITING THE PROGRAM. 
C  ANY UNIT NUMBERS ALLOCATED WITH FTGIOU MUST BE FREED WITH FTFIOU.
      CALL FTCLOS(INUNIT, STATUS)
      CALL FTCLOS(OUTUNIT, STATUS)
      CALL FTFIOU(-1, STATUS)

C  CHECK FOR ANY ERROR, AND IF SO PRINT OUT ERROR MESSAGES.
C  THE PRINTERROR SUBROUTINE IS LISTED NEAR THE END OF THIS FILE.
      IF (STATUS .GT. 0)CALL PRINTERROR(STATUS)
      END
